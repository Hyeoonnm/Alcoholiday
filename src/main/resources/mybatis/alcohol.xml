<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="drink">

    <resultMap type="Alcohol" id="AlcoholMap" autoMapping="true">
        <id column="stuff_num" property="stuffNum"/>
        <collection property="attaches" column="attach_stuff_num" ofType="Attach" javaType="ArrayList"
                    autoMapping="true">
            <id column="attach_num" property="attachNum"/>
            <id column="attach_filename" property="attachFilename"/>
            <id column="attach_stuff_num" property="stuffAttachNum"/>
        </collection>

        <collection property="replyList" column="reply_stuff_num" ofType="Reply" javaType="ArrayList"
                    autoMapping="true">
            <id column="reply_user_id" property="replyUserId"/>
            <id column="reply_content" property="replyContent"/>
            <id column="reply_reg_date" property="replyRegDate"/>
        </collection>
    </resultMap>

    <select id="list" resultMap="AlcoholMap">
        select alcohol.*, attach_num, attach_filename,
               (SELECT COUNT(*) FROM reply WHERE reply.reply_stuff_num = alcohol.stuff_num) replyCnt
        from alcohol
        left join attach on (alcohol.stuff_num = attach.attach_stuff_num)

        <where>
            stuff_split = 1
            <if test="searchType == 1">AND alcohol.stuff_name LIKE CONCAT(CONCAT('%', #{keywords}), '%')</if>

            <if test="searchType == 2">AND alcohol.stuff_user_id LIKE CONCAT(CONCAT('%', #{keywords}), '%')</if>

            <if test="searchType == 3">AND alcohol.stuff_content LIKE CONCAT(CONCAT('%', #{keywords}), '%')</if>
        </where>


        GROUP BY stuff_num
        ORDER BY stuff_num;
    </select>

    <!--drink 메뉴는 split 번호 1-->
    <insert id="add" parameterType="kr.ac.alcoholiday.model.Alcohol">
        INSERT INTO alcohol (stuff_name, stuff_price, stuff_reg_date, stuff_split, stuff_user_id, stuff_content)
        VALUES (#{stuffName}, #{stuffPrice}, NOW(), 1, #{stuffUserId}, #{stuffContent})
        <selectKey order="AFTER" keyProperty="stuffNum" resultType="Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>


    <select id="item" resultMap="AlcoholMap">
        select alcohol.*, attach_num, attach_filename, reply_user_id, reply_content, reply_reg_date, reply_num
        from alcohol
                 left join attach on (alcohol.stuff_num = attach.attach_stuff_num)
                 left join reply on alcohol.stuff_num = reply.reply_stuff_num
        WHERE stuff_num = #{stuffNum}
          AND stuff_split = 1
    </select>

    <update id="update">
        UPDATE alcohol
        SET stuff_name     = #{stuffName},
            stuff_price    = #{stuffPrice},
            stuff_reg_date = NOW(),
            stuff_split    = 1,
            stuff_content  = #{stuffContent}
        WHERE stuff_num = #{stuffNum}
          AND stuff_user_id = #{stuffUserId}
          AND stuff_split = 1
    </update>

    <delete id="delete">
        DELETE
        FROM alcohol
        WHERE stuff_num = #{stuffNum}
          AND stuff_user_id = #{userId}
          AND stuff_split = 1
    </delete>

</mapper>