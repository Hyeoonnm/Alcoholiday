-- --------------------------------------------------------
-- 호스트:                          127.0.0.1
-- 서버 버전:                        10.8.4-MariaDB - mariadb.org binary distribution
-- 서버 OS:                        Win64
-- HeidiSQL 버전:                  11.3.0.6295
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- alcoholiday 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `alcoholiday`;
CREATE DATABASE IF NOT EXISTS `alcoholiday` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;
USE `alcoholiday`;

-- 테이블 alcoholiday.alcohol 구조 내보내기
DROP TABLE IF EXISTS `alcohol`;
CREATE TABLE IF NOT EXISTS `alcohol` (
  `stuff_num` int(32) NOT NULL AUTO_INCREMENT COMMENT '술, 도구, 레시피 고유 번호',
  `stuff_name` varchar(128) NOT NULL COMMENT '술, 도구, 레시피 이름',
  `stuff_publisher` varchar(128) NOT NULL COMMENT '술, 도구, 레시피 제조사',
  `stuff_price` int(32) NOT NULL COMMENT '술, 도구, 레시피 가격',
  `stuff_reg_date` datetime NOT NULL COMMENT '술, 도구, 레시피 등록일',
  `stuff_split` int(32) NOT NULL COMMENT '술, 도구 ,레시피 등 분류 번호',
  `stuff_thumbnail` varchar(128) DEFAULT NULL COMMENT '술, 도구 ,레시피 썸네일 이미지',
  `stuff_user_id` varchar(128) NOT NULL DEFAULT '' COMMENT '유저 고유 아이디',
  `stuff_content` text DEFAULT NULL COMMENT '술, 도구, 레시피 설명',
  PRIMARY KEY (`stuff_num`) USING BTREE,
  KEY `alcohol_user_id` (`stuff_user_id`) USING BTREE,
  KEY `stuff_num` (`stuff_num`),
  CONSTRAINT `FK_alcohol_user` FOREIGN KEY (`stuff_user_id`) REFERENCES `user` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COMMENT='게시판';

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 alcoholiday.attach 구조 내보내기
DROP TABLE IF EXISTS `attach`;
CREATE TABLE IF NOT EXISTS `attach` (
  `attach_num` int(32) NOT NULL AUTO_INCREMENT COMMENT '이미지 고유 번호',
  `attach_filename` text DEFAULT NULL COMMENT '이미지 파일 이름',
  `attach_stuff_num` int(32) DEFAULT NULL COMMENT '디테일 고유 번호',
  PRIMARY KEY (`attach_num`),
  KEY `FK_attach_detail` (`attach_stuff_num`) USING BTREE,
  CONSTRAINT `FK_attach_alcohol` FOREIGN KEY (`attach_stuff_num`) REFERENCES `alcohol` (`stuff_num`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='이미지 파일\r\n';

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 alcoholiday.user 구조 내보내기
DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
  `user_id` varchar(128) NOT NULL COMMENT '유저 고유 아이디',
  `user_pwd` varchar(128) NOT NULL COMMENT '유저 비밀번호',
  `user_name` varchar(32) NOT NULL COMMENT '유저 이름',
  `user_phone` varchar(128) NOT NULL DEFAULT '0' COMMENT '유저 전화번호',
  `user_email` text NOT NULL COMMENT '유저 이메일',
  `user_join_date` datetime NOT NULL COMMENT '유저 가입일',
  PRIMARY KEY (`user_id`) USING BTREE,
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='사용자';

-- 내보낼 데이터가 선택되어 있지 않습니다.


-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;

-- information_schema 데이터베이스 구조 내보내기
DROP DATABASE IF EXISTS `information_schema`;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
